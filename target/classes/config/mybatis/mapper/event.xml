<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="e">

	<!-- 이벤트 추가 -->
	<insert id="event_insert" parameterType="event">
		INSERT INTO getspo_event
		VALUES (seq_event_idx.nextVal, #{user_idx},
		#{event_sports_idx},
		#{event_loc}, #{event_name}, #{event_h_start},
		#{event_h_end},
		#{event_r_start},
		#{event_r_end},
		#{event_addrcode},
		#{event_addr},
		#{event_addrdetail, jdbcType=VARCHAR},
		#{event_thumbnail},
		#{event_content},
		#{event_paymethod},
		#{event_ticketname},
		#{event_max_joiner},
		#{event_price},
		#{event_ticket_open},
		#{event_contact_name},
		#{event_contact_email},
		#{event_contact_tel},
		#{event_bank, jdbcType=VARCHAR},
		#{event_account, jdbcType=VARCHAR},
		#{event_account_name, jdbcType=VARCHAR},
		sysdate,
		0,
		'N',
		NULL
		)
	</insert>


	<!-- 호스트페이지 유저별 개설행사 조회 페이징포함 -->
	<select id="usereventspage" parameterType="java.util.Map"
		resultType="event">
		SELECT *
		FROM (
		SELECT e.*, ROWNUM AS rnum
		FROM getspo_event e
		WHERE user_idx = #{user_idx} AND delete_status = 'N'
		ORDER BY
		event_createdate DESC
		)
		WHERE rnum BETWEEN #{start} AND #{end}

	</select>

	<!-- 유저별 개최 행사 총 수 -->
	<select id="eventcount" parameterType="int" resultType="int">
		select
		COUNT(*) from getspo_event where user_idx = #{user_idx} AND
		delete_status =
		'N'
	</select>


	<!-- 유저별 행사 조회 -->
	<select id="userevents" parameterType="int" resultType="event">
		select *
		from getspo_event where user_idx = #{user_idx} order by
		event_createdate DESC
	</select>

	<!-- 전체 행사 조회 -->
	<select id="allevents" resultType="event"
		parameterType="java.util.Map">
		SELECT * FROM (
		SELECT RANK() OVER(ORDER BY event_idx DESC) no, b.*
		FROM (
		SELECT * FROM getspo_event WHERE delete_status = 'N'
		<trim prefix="AND" prefixOverrides="OR|AND">
			<if test="event_loc_list != null">
				<foreach item="location" collection="event_loc_list"
					open="(" separator="OR" close=")">
					event_loc LIKE '%' || #{location} ||
					'%'
				</foreach>
			</if>
			<if test="event_sports_idx != null">
				AND event_sports_idx = #{event_sports_idx}
			</if>
			<if test="event_loc != null">
				AND event_loc = #{event_loc}
			</if>
			<if test="event_name != null">
				OR event_name LIKE '%' || #{event_name} || '%'
			</if>
			<if test="event_content != null">
				OR event_content LIKE '%' || #{event_content} || '%'
			</if>
			<if test="event_addr != null">
				OR event_addr LIKE '%' || #{event_addr} || '%'
			</if>
			<if test="event_addrdetail != null">
				OR event_addrdetail LIKE '%' || #{event_addrdetail} ||
				'%'
			</if>
			<if test="event_h_start != null">
				OR event_h_start LIKE '%' || #{event_h_start} || '%'
			</if>
			<if test="event_r_start != null">
				OR event_r_start LIKE '%' || #{event_r_start} || '%'
			</if>
		</trim>
		) b
		)
		WHERE no BETWEEN #{start} AND #{end}
	</select>

	<!-- 페이지 메뉴에 필요한 전체 행사 게시글 수 조회 -->
	<select id="event_count" resultType="int"
		parameterType="java.util.Map">
		SELECT COUNT(*) FROM getspo_event WHERE delete_status = 'N'
		<trim prefix="AND" prefixOverrides="OR|AND">
			<if test="event_loc_list != null">
				<foreach item="location" collection="event_loc_list"
					open="(" separator="OR" close=")">
					event_loc LIKE '%' || #{location} ||
					'%'
				</foreach>
			</if>
			<if test="event_sports_idx != null">
				AND event_sports_idx = #{event_sports_idx}
			</if>
			<if test="event_name != null">
				OR event_name LIKE '%' || #{event_name} || '%'
			</if>
			<if test="event_content != null">
				OR event_content LIKE '%' || #{event_content} || '%'
			</if>
			<if test="event_addr != null">
				OR event_addr LIKE '%' || #{event_addr} || '%'
			</if>
			<if test="event_addrdetail != null">
				OR event_addrdetail LIKE '%' || #{event_addrdetail} ||
				'%'
			</if>
			<if test="event_h_start != null">
				OR event_h_start LIKE '%' || #{event_h_start} || '%'
			</if>
			<if test="event_r_start != null">
				OR event_r_start LIKE '%' || #{event_r_start} || '%'
			</if>
		</trim>
	</select>

	<!-- 이벤트 디테일 idx값별로 가져오기 -->
	<select id="getevent_idx" resultType="event" parameterType="int">
		SELECT * FROM getspo_event WHERE event_idx = #{event_idx}
	</select>

	<!-- 이벤트 신청된 티켓 조회 -->
	<select id="apply_event" parameterType="int" resultType="int">
		SELECT
		COUNT(*) FROM getspo_order WHERE event_idx = #{event_idx}
	</select>

	<!-- 이벤트 수정 update_event -->
	<update id="update_event" parameterType="event">
		UPDATE getspo_event set
		event_sports_idx = #{event_sports_idx},
		event_loc = #{event_loc},
		event_name = #{event_name},
		event_h_start = #{event_h_start},
		event_h_end = #{event_h_end},
		event_r_start = #{event_r_start},
		event_r_end = #{event_r_end},
		event_addrcode = #{event_addrcode},
		event_addr = #{event_addr},
		event_addrdetail = #{event_addrdetail,
		jdbcType=VARCHAR},
		event_thumbnail = #{event_thumbnail},
		event_content =
		#{event_content},
		event_paymethod = #{event_paymethod},
		event_ticketname = #{event_ticketname},
		event_max_joiner =
		#{event_max_joiner},
		event_price = #{event_price},
		event_ticket_open =
		#{event_ticket_open},
		event_contact_name = #{event_contact_name},
		event_contact_email = #{event_contact_email},
		event_contact_tel =
		#{event_contact_tel},
		event_bank = #{event_bank, jdbcType=VARCHAR},
		event_account = #{event_account, jdbcType=VARCHAR},
		event_account_name
		= #{event_account_name, jdbcType=VARCHAR},
		event_createdate = sysdate
		WHERE event_idx = #{event_idx}
	</update>


	<!-- 조회수 증가 -->
	<update id="event_update_viewcount" parameterType="int">
		update
		getspo_event set event_viewcount = event_viewcount + 1 where
		event_idx
		= #{event_idx}
	</update>

	<!-- 다가오는 행사 리스트 -->
	<select id="fast_event" resultType="event">
		SELECT * FROM getspo_event
		WHERE event_h_start >= TRUNC(SYSDATE) AND delete_status = 'N'
		ORDER BY event_h_start ASC
	</select>

	<!-- 호스트페이지 유저별 개설행사삭제 조회 페이징포함 -->
	<select id="usereventspagecancel" parameterType="java.util.Map"
		resultType="event">
		SELECT *
		FROM (
		SELECT e.*, ROWNUM AS rnum
		FROM getspo_event e
		WHERE user_idx = #{user_idx} AND delete_status = 'Y'
		ORDER BY
		delete_date DESC
		)
		WHERE rnum BETWEEN #{start} AND #{end}

	</select>

	<!-- 호스트센터 행사 목록 - 행사 취소 -->
	<update id="delete_event" parameterType="int">
		UPDATE getspo_event
		SET
		delete_status = 'Y', delete_date = SYSDATE
		WHERE event_idx =
		#{event_idx}
	</update>

	<!-- 호스트 유저별 이벤트행사삭제 카운트 -->
	<select id="eventCancelCount" parameterType="int"
		resultType="int">
		SELECT COUNT(*)
		FROM getspo_event
		WHERE user_idx =
		#{user_idx} AND delete_status = 'Y'
	</select>
	<!-- 공지사항 저장 -->
	<insert id="save_notice" parameterType="notice">
		INSERT INTO getspo_notice
		values (seq_notice_idx.nextVal, #{event_idx},
		#{notice_title},
		#{notice_content}, sysdate)
	</insert>

	<!-- 공지사항 조회 -->
	<select id="select_notice" parameterType="int"
		resultType="notice">
		SELECT * FROM getspo_notice where event_idx = #{event_idx}
	</select>

	<!-- 공지사항 수정 -->
	<update id="update_notice" parameterType="notice">
		UPDATE getspo_notice
		SET notice_title = #{notice_title}, notice_content =
		#{notice_content}, notice_date = sysdate
	</update>

	<!-- 공지사항 삭제 -->
	<delete id="delete_notice" parameterType="int">
		DELETE FROM getspo_notice WHERE notice_idx = #{notice_idx}
	</delete>

	<!-- 문의하기 등록 -->
	<insert id="inser_qa" parameterType="qa">
		INSERT INTO getspo_qa
		values(
		seq_question_idx.nextVal,
		#{user_idx},
		#{event_idx},
		#{user_name},
		#{user_email},
		#{qa_content},
		#{qa_is_private},
		sysdate
		)
	</insert>

	<!-- 문의하기 이벤트별 조회 -->
	<select id="qa_list" parameterType="int" resultType="qa">
		select *
		from getspo_qa where event_idx = #{event_idx}
	</select>

	<!-- 댓글을 단 해당 문의하기idx가져오기 -->
	<select id="qa_one_idx" parameterType="int" resultType="qa">
		select *
		from getspo_qa where qa_idx = #{qa_idx}
	</select>

	<!-- 댓글 작성 -->
	<insert id="insert_comment" parameterType="comment">
		insert into
		getspo_comment values(
		seq_qa_comment_idx.nextVal,
		#{qa_idx},
		#{user_idx},
		#{comment_content},
		sysdate
		)
	</insert>

	<!-- 해당 댓글 조회 -->
	<select id="select_comment_qaidx" parameterType="int"
		resultType="comment">
		select * from getspo_comment where qa_idx = #{qa_idx}
	</select>

	<!-- 댓글삭제전 댓글idx가져오기 -->
	<select id="select_del_comm" parameterType="int"
		resultType="comment">
		select * from getspo_comment where comment_idx =
		#{comment_idx}
	</select>

	<!-- 해당 댓글 삭제 -->
	<delete id="delete_comment" parameterType="int">
		delete from getspo_comment where comment_idx = #{comment_idx}
	</delete>

</mapper>






